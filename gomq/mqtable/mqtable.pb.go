// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.3
// source: mqtable.proto

package mqtable

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GameEnd_TableType int32

const (
	GameEnd_UNKNOWN_TABLE_TYPE GameEnd_TableType = 0
	GameEnd_LIVE               GameEnd_TableType = 1 // CASH
	GameEnd_SITNGO             GameEnd_TableType = 2
	GameEnd_MULTI              GameEnd_TableType = 3
)

// Enum value maps for GameEnd_TableType.
var (
	GameEnd_TableType_name = map[int32]string{
		0: "UNKNOWN_TABLE_TYPE",
		1: "LIVE",
		2: "SITNGO",
		3: "MULTI",
	}
	GameEnd_TableType_value = map[string]int32{
		"UNKNOWN_TABLE_TYPE": 0,
		"LIVE":               1,
		"SITNGO":             2,
		"MULTI":              3,
	}
)

func (x GameEnd_TableType) Enum() *GameEnd_TableType {
	p := new(GameEnd_TableType)
	*p = x
	return p
}

func (x GameEnd_TableType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameEnd_TableType) Descriptor() protoreflect.EnumDescriptor {
	return file_mqtable_proto_enumTypes[0].Descriptor()
}

func (GameEnd_TableType) Type() protoreflect.EnumType {
	return &file_mqtable_proto_enumTypes[0]
}

func (x GameEnd_TableType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameEnd_TableType.Descriptor instead.
func (GameEnd_TableType) EnumDescriptor() ([]byte, []int) {
	return file_mqtable_proto_rawDescGZIP(), []int{0, 0}
}

type GameEnd_TableRound int32

const (
	GameEnd_UNKNOWN_TABLE_ROUND GameEnd_TableRound = 0
	GameEnd_PRE_FLOP            GameEnd_TableRound = 1
	GameEnd_FLOP                GameEnd_TableRound = 2
	GameEnd_TURN                GameEnd_TableRound = 3
	GameEnd_RIVER               GameEnd_TableRound = 4
)

// Enum value maps for GameEnd_TableRound.
var (
	GameEnd_TableRound_name = map[int32]string{
		0: "UNKNOWN_TABLE_ROUND",
		1: "PRE_FLOP",
		2: "FLOP",
		3: "TURN",
		4: "RIVER",
	}
	GameEnd_TableRound_value = map[string]int32{
		"UNKNOWN_TABLE_ROUND": 0,
		"PRE_FLOP":            1,
		"FLOP":                2,
		"TURN":                3,
		"RIVER":               4,
	}
)

func (x GameEnd_TableRound) Enum() *GameEnd_TableRound {
	p := new(GameEnd_TableRound)
	*p = x
	return p
}

func (x GameEnd_TableRound) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameEnd_TableRound) Descriptor() protoreflect.EnumDescriptor {
	return file_mqtable_proto_enumTypes[1].Descriptor()
}

func (GameEnd_TableRound) Type() protoreflect.EnumType {
	return &file_mqtable_proto_enumTypes[1]
}

func (x GameEnd_TableRound) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameEnd_TableRound.Descriptor instead.
func (GameEnd_TableRound) EnumDescriptor() ([]byte, []int) {
	return file_mqtable_proto_rawDescGZIP(), []int{0, 1}
}

type TournamentEnd_Type int32

const (
	TournamentEnd_UNKNOWN TournamentEnd_Type = 0
	TournamentEnd_SITNGO  TournamentEnd_Type = 1
	TournamentEnd_MULTI   TournamentEnd_Type = 2
)

// Enum value maps for TournamentEnd_Type.
var (
	TournamentEnd_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "SITNGO",
		2: "MULTI",
	}
	TournamentEnd_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"SITNGO":  1,
		"MULTI":   2,
	}
)

func (x TournamentEnd_Type) Enum() *TournamentEnd_Type {
	p := new(TournamentEnd_Type)
	*p = x
	return p
}

func (x TournamentEnd_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TournamentEnd_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_mqtable_proto_enumTypes[2].Descriptor()
}

func (TournamentEnd_Type) Type() protoreflect.EnumType {
	return &file_mqtable_proto_enumTypes[2]
}

func (x TournamentEnd_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TournamentEnd_Type.Descriptor instead.
func (TournamentEnd_Type) EnumDescriptor() ([]byte, []int) {
	return file_mqtable_proto_rawDescGZIP(), []int{4, 0}
}

type GameEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableType GameEnd_TableType `protobuf:"varint,7,opt,name=table_type,json=tableType,proto3,enum=GameEnd_TableType" json:"table_type,omitempty"`
	StartedAt int64             `protobuf:"varint,1,opt,name=StartedAt,proto3" json:"StartedAt,omitempty"`
	// In seconds
	GameStartAt    int64              `protobuf:"varint,8,opt,name=gameStartAt,proto3" json:"gameStartAt,omitempty"`
	Winners        []*Winner          `protobuf:"bytes,2,rep,name=winners,proto3" json:"winners,omitempty"`
	Players        []*Player          `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	CommunityCards []string           `protobuf:"bytes,4,rep,name=community_cards,json=communityCards,proto3" json:"community_cards,omitempty"`
	GotToShowDown  bool               `protobuf:"varint,9,opt,name=got_to_show_down,json=gotToShowDown,proto3" json:"got_to_show_down,omitempty"`
	TableRound     GameEnd_TableRound `protobuf:"varint,10,opt,name=table_round,json=tableRound,proto3,enum=GameEnd_TableRound" json:"table_round,omitempty"`
}

func (x *GameEnd) Reset() {
	*x = GameEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mqtable_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEnd) ProtoMessage() {}

func (x *GameEnd) ProtoReflect() protoreflect.Message {
	mi := &file_mqtable_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEnd.ProtoReflect.Descriptor instead.
func (*GameEnd) Descriptor() ([]byte, []int) {
	return file_mqtable_proto_rawDescGZIP(), []int{0}
}

func (x *GameEnd) GetTableType() GameEnd_TableType {
	if x != nil {
		return x.TableType
	}
	return GameEnd_UNKNOWN_TABLE_TYPE
}

func (x *GameEnd) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *GameEnd) GetGameStartAt() int64 {
	if x != nil {
		return x.GameStartAt
	}
	return 0
}

func (x *GameEnd) GetWinners() []*Winner {
	if x != nil {
		return x.Winners
	}
	return nil
}

func (x *GameEnd) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameEnd) GetCommunityCards() []string {
	if x != nil {
		return x.CommunityCards
	}
	return nil
}

func (x *GameEnd) GetGotToShowDown() bool {
	if x != nil {
		return x.GotToShowDown
	}
	return false
}

func (x *GameEnd) GetTableRound() GameEnd_TableRound {
	if x != nil {
		return x.TableRound
	}
	return GameEnd_UNKNOWN_TABLE_ROUND
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WageredChips int64  `protobuf:"varint,2,opt,name=wagered_chips,json=wageredChips,proto3" json:"wagered_chips,omitempty"`
	LastAction   string `protobuf:"bytes,3,opt,name=lastAction,proto3" json:"lastAction,omitempty"`
	// filled if got to the showdown
	Hand     string   `protobuf:"bytes,4,opt,name=hand,proto3" json:"hand,omitempty"`
	Cards    []string `protobuf:"bytes,5,rep,name=cards,proto3" json:"cards,omitempty"`
	IsWinner bool     `protobuf:"varint,6,opt,name=isWinner,proto3" json:"isWinner,omitempty"`
	// Without rake.
	WonChips int64 `protobuf:"varint,7,opt,name=won_chips,json=wonChips,proto3" json:"won_chips,omitempty"`
	Rake     int64 `protobuf:"varint,8,opt,name=rake,proto3" json:"rake,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mqtable_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_mqtable_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_mqtable_proto_rawDescGZIP(), []int{1}
}

func (x *Player) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Player) GetWageredChips() int64 {
	if x != nil {
		return x.WageredChips
	}
	return 0
}

func (x *Player) GetLastAction() string {
	if x != nil {
		return x.LastAction
	}
	return ""
}

func (x *Player) GetHand() string {
	if x != nil {
		return x.Hand
	}
	return ""
}

func (x *Player) GetCards() []string {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *Player) GetIsWinner() bool {
	if x != nil {
		return x.IsWinner
	}
	return false
}

func (x *Player) GetWonChips() int64 {
	if x != nil {
		return x.WonChips
	}
	return 0
}

func (x *Player) GetRake() int64 {
	if x != nil {
		return x.Rake
	}
	return 0
}

type Winner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Chips  int64  `protobuf:"varint,2,opt,name=chips,proto3" json:"chips,omitempty"`
	Hand   string `protobuf:"bytes,3,opt,name=hand,proto3" json:"hand,omitempty"`
}

func (x *Winner) Reset() {
	*x = Winner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mqtable_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Winner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Winner) ProtoMessage() {}

func (x *Winner) ProtoReflect() protoreflect.Message {
	mi := &file_mqtable_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Winner.ProtoReflect.Descriptor instead.
func (*Winner) Descriptor() ([]byte, []int) {
	return file_mqtable_proto_rawDescGZIP(), []int{2}
}

func (x *Winner) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Winner) GetChips() int64 {
	if x != nil {
		return x.Chips
	}
	return 0
}

func (x *Winner) GetHand() string {
	if x != nil {
		return x.Hand
	}
	return ""
}

type SurvivalEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId    string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	IsUserLost bool   `protobuf:"varint,2,opt,name=is_user_lost,json=isUserLost,proto3" json:"is_user_lost,omitempty"`
	UserId     string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SurvivalEnd) Reset() {
	*x = SurvivalEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mqtable_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurvivalEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurvivalEnd) ProtoMessage() {}

func (x *SurvivalEnd) ProtoReflect() protoreflect.Message {
	mi := &file_mqtable_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurvivalEnd.ProtoReflect.Descriptor instead.
func (*SurvivalEnd) Descriptor() ([]byte, []int) {
	return file_mqtable_proto_rawDescGZIP(), []int{3}
}

func (x *SurvivalEnd) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *SurvivalEnd) GetIsUserLost() bool {
	if x != nil {
		return x.IsUserLost
	}
	return false
}

func (x *SurvivalEnd) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type TournamentEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type              TournamentEnd_Type  `protobuf:"varint,1,opt,name=type,proto3,enum=TournamentEnd_Type" json:"type,omitempty"`
	BuyIn             int64               `protobuf:"varint,3,opt,name=buy_in,json=buyIn,proto3" json:"buy_in,omitempty"`
	Fee               int64               `protobuf:"varint,4,opt,name=fee,proto3" json:"fee,omitempty"`
	Players           []*TournamentPlayer `protobuf:"bytes,5,rep,name=players,proto3" json:"players,omitempty"`
	TournamentWinners []*TournamentWinner `protobuf:"bytes,2,rep,name=tournament_winners,json=tournamentWinners,proto3" json:"tournament_winners,omitempty"`
}

func (x *TournamentEnd) Reset() {
	*x = TournamentEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mqtable_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TournamentEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TournamentEnd) ProtoMessage() {}

func (x *TournamentEnd) ProtoReflect() protoreflect.Message {
	mi := &file_mqtable_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TournamentEnd.ProtoReflect.Descriptor instead.
func (*TournamentEnd) Descriptor() ([]byte, []int) {
	return file_mqtable_proto_rawDescGZIP(), []int{4}
}

func (x *TournamentEnd) GetType() TournamentEnd_Type {
	if x != nil {
		return x.Type
	}
	return TournamentEnd_UNKNOWN
}

func (x *TournamentEnd) GetBuyIn() int64 {
	if x != nil {
		return x.BuyIn
	}
	return 0
}

func (x *TournamentEnd) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TournamentEnd) GetPlayers() []*TournamentPlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *TournamentEnd) GetTournamentWinners() []*TournamentWinner {
	if x != nil {
		return x.TournamentWinners
	}
	return nil
}

type TournamentPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Place    int64  `protobuf:"varint,2,opt,name=place,proto3" json:"place,omitempty"`
	WonChips int64  `protobuf:"varint,3,opt,name=won_chips,json=wonChips,proto3" json:"won_chips,omitempty"`
}

func (x *TournamentPlayer) Reset() {
	*x = TournamentPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mqtable_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TournamentPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TournamentPlayer) ProtoMessage() {}

func (x *TournamentPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_mqtable_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TournamentPlayer.ProtoReflect.Descriptor instead.
func (*TournamentPlayer) Descriptor() ([]byte, []int) {
	return file_mqtable_proto_rawDescGZIP(), []int{5}
}

func (x *TournamentPlayer) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TournamentPlayer) GetPlace() int64 {
	if x != nil {
		return x.Place
	}
	return 0
}

func (x *TournamentPlayer) GetWonChips() int64 {
	if x != nil {
		return x.WonChips
	}
	return 0
}

type TournamentWinner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Place  int64  `protobuf:"varint,2,opt,name=place,proto3" json:"place,omitempty"`
}

func (x *TournamentWinner) Reset() {
	*x = TournamentWinner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mqtable_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TournamentWinner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TournamentWinner) ProtoMessage() {}

func (x *TournamentWinner) ProtoReflect() protoreflect.Message {
	mi := &file_mqtable_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TournamentWinner.ProtoReflect.Descriptor instead.
func (*TournamentWinner) Descriptor() ([]byte, []int) {
	return file_mqtable_proto_rawDescGZIP(), []int{6}
}

func (x *TournamentWinner) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TournamentWinner) GetPlace() int64 {
	if x != nil {
		return x.Place
	}
	return 0
}

var File_mqtable_proto protoreflect.FileDescriptor

var file_mqtable_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x71, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xe4, 0x03, 0x0a, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x31, 0x0a, 0x0a, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x21,
	0x0a, 0x07, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x73, 0x12, 0x21, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x27, 0x0a,
	0x10, 0x67, 0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x6f, 0x77,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x67, 0x6f, 0x74, 0x54, 0x6f, 0x53, 0x68,
	0x6f, 0x77, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x34, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x64, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x44, 0x0a, 0x09,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x49, 0x54, 0x4e, 0x47, 0x4f, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x55, 0x4c, 0x54, 0x49,
	0x10, 0x03, 0x22, 0x52, 0x0a, 0x0a, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x54, 0x41, 0x42, 0x4c,
	0x45, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x52, 0x45,
	0x5f, 0x46, 0x4c, 0x4f, 0x50, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x4c, 0x4f, 0x50, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x55, 0x52, 0x4e, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x52,
	0x49, 0x56, 0x45, 0x52, 0x10, 0x04, 0x22, 0xdd, 0x01, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x61,
	0x67, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x77, 0x61, 0x67, 0x65, 0x72, 0x65, 0x64, 0x43, 0x68, 0x69, 0x70, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x57,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x57,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x69,
	0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x6f, 0x6e, 0x43, 0x68, 0x69,
	0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6b, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x72, 0x61, 0x6b, 0x65, 0x22, 0x4b, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x69,
	0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x68, 0x69, 0x70, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x61, 0x6e, 0x64, 0x22, 0x63, 0x0a, 0x0b, 0x53, 0x75, 0x72, 0x76, 0x69, 0x76, 0x61, 0x6c, 0x45,
	0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xfc, 0x01, 0x0a, 0x0d, 0x54, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x64, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x75, 0x79, 0x5f, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x75, 0x79, 0x49, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x2b, 0x0a, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x12, 0x74, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x6e, 0x74, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x11, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x2a, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x54, 0x4e, 0x47, 0x4f, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x4d, 0x55, 0x4c, 0x54, 0x49, 0x10, 0x02, 0x22, 0x5e, 0x0a, 0x10, 0x54, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f,
	0x6e, 0x5f, 0x63, 0x68, 0x69, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77,
	0x6f, 0x6e, 0x43, 0x68, 0x69, 0x70, 0x73, 0x22, 0x41, 0x0a, 0x10, 0x54, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_mqtable_proto_rawDescOnce sync.Once
	file_mqtable_proto_rawDescData = file_mqtable_proto_rawDesc
)

func file_mqtable_proto_rawDescGZIP() []byte {
	file_mqtable_proto_rawDescOnce.Do(func() {
		file_mqtable_proto_rawDescData = protoimpl.X.CompressGZIP(file_mqtable_proto_rawDescData)
	})
	return file_mqtable_proto_rawDescData
}

var file_mqtable_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_mqtable_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_mqtable_proto_goTypes = []interface{}{
	(GameEnd_TableType)(0),   // 0: GameEnd.TableType
	(GameEnd_TableRound)(0),  // 1: GameEnd.TableRound
	(TournamentEnd_Type)(0),  // 2: TournamentEnd.Type
	(*GameEnd)(nil),          // 3: GameEnd
	(*Player)(nil),           // 4: Player
	(*Winner)(nil),           // 5: Winner
	(*SurvivalEnd)(nil),      // 6: SurvivalEnd
	(*TournamentEnd)(nil),    // 7: TournamentEnd
	(*TournamentPlayer)(nil), // 8: TournamentPlayer
	(*TournamentWinner)(nil), // 9: TournamentWinner
}
var file_mqtable_proto_depIdxs = []int32{
	0, // 0: GameEnd.table_type:type_name -> GameEnd.TableType
	5, // 1: GameEnd.winners:type_name -> Winner
	4, // 2: GameEnd.players:type_name -> Player
	1, // 3: GameEnd.table_round:type_name -> GameEnd.TableRound
	2, // 4: TournamentEnd.type:type_name -> TournamentEnd.Type
	8, // 5: TournamentEnd.players:type_name -> TournamentPlayer
	9, // 6: TournamentEnd.tournament_winners:type_name -> TournamentWinner
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_mqtable_proto_init() }
func file_mqtable_proto_init() {
	if File_mqtable_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mqtable_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mqtable_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mqtable_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Winner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mqtable_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurvivalEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mqtable_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TournamentEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mqtable_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TournamentPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mqtable_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TournamentWinner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mqtable_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mqtable_proto_goTypes,
		DependencyIndexes: file_mqtable_proto_depIdxs,
		EnumInfos:         file_mqtable_proto_enumTypes,
		MessageInfos:      file_mqtable_proto_msgTypes,
	}.Build()
	File_mqtable_proto = out.File
	file_mqtable_proto_rawDesc = nil
	file_mqtable_proto_goTypes = nil
	file_mqtable_proto_depIdxs = nil
}
