// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: grpctableevents/api.proto

package grpctableevents

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Events struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *Events) Reset() {
	*x = Events{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctableevents_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Events) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Events) ProtoMessage() {}

func (x *Events) ProtoReflect() protoreflect.Message {
	mi := &file_grpctableevents_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Events.ProtoReflect.Descriptor instead.
func (*Events) Descriptor() ([]byte, []int) {
	return file_grpctableevents_api_proto_rawDescGZIP(), []int{0}
}

func (x *Events) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Payload string `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctableevents_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_grpctableevents_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_grpctableevents_api_proto_rawDescGZIP(), []int{1}
}

func (x *Event) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Event) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type StreamTableEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
}

func (x *StreamTableEventsRequest) Reset() {
	*x = StreamTableEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctableevents_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamTableEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTableEventsRequest) ProtoMessage() {}

func (x *StreamTableEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpctableevents_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTableEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamTableEventsRequest) Descriptor() ([]byte, []int) {
	return file_grpctableevents_api_proto_rawDescGZIP(), []int{2}
}

func (x *StreamTableEventsRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

var File_grpctableevents_api_proto protoreflect.FileDescriptor

var file_grpctableevents_api_proto_rawDesc = []byte{
	0x0a, 0x19, 0x67, 0x72, 0x70, 0x63, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x67, 0x72, 0x70,
	0x63, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x38, 0x0a, 0x06,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x35, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x35, 0x0a,
	0x18, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x64, 0x32, 0x71, 0x0a, 0x12, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x11, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x29, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x00, 0x30, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpctableevents_api_proto_rawDescOnce sync.Once
	file_grpctableevents_api_proto_rawDescData = file_grpctableevents_api_proto_rawDesc
)

func file_grpctableevents_api_proto_rawDescGZIP() []byte {
	file_grpctableevents_api_proto_rawDescOnce.Do(func() {
		file_grpctableevents_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpctableevents_api_proto_rawDescData)
	})
	return file_grpctableevents_api_proto_rawDescData
}

var file_grpctableevents_api_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_grpctableevents_api_proto_goTypes = []interface{}{
	(*Events)(nil),                   // 0: grpctableevents.Events
	(*Event)(nil),                    // 1: grpctableevents.Event
	(*StreamTableEventsRequest)(nil), // 2: grpctableevents.StreamTableEventsRequest
}
var file_grpctableevents_api_proto_depIdxs = []int32{
	1, // 0: grpctableevents.Events.events:type_name -> grpctableevents.Event
	2, // 1: grpctableevents.TableEventsService.StreamTableEvents:input_type -> grpctableevents.StreamTableEventsRequest
	0, // 2: grpctableevents.TableEventsService.StreamTableEvents:output_type -> grpctableevents.Events
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_grpctableevents_api_proto_init() }
func file_grpctableevents_api_proto_init() {
	if File_grpctableevents_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpctableevents_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Events); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctableevents_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctableevents_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamTableEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpctableevents_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpctableevents_api_proto_goTypes,
		DependencyIndexes: file_grpctableevents_api_proto_depIdxs,
		MessageInfos:      file_grpctableevents_api_proto_msgTypes,
	}.Build()
	File_grpctableevents_api_proto = out.File
	file_grpctableevents_api_proto_rawDesc = nil
	file_grpctableevents_api_proto_goTypes = nil
	file_grpctableevents_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TableEventsServiceClient is the client API for TableEventsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TableEventsServiceClient interface {
	StreamTableEvents(ctx context.Context, in *StreamTableEventsRequest, opts ...grpc.CallOption) (TableEventsService_StreamTableEventsClient, error)
}

type tableEventsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTableEventsServiceClient(cc grpc.ClientConnInterface) TableEventsServiceClient {
	return &tableEventsServiceClient{cc}
}

func (c *tableEventsServiceClient) StreamTableEvents(ctx context.Context, in *StreamTableEventsRequest, opts ...grpc.CallOption) (TableEventsService_StreamTableEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TableEventsService_serviceDesc.Streams[0], "/grpctableevents.TableEventsService/StreamTableEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &tableEventsServiceStreamTableEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TableEventsService_StreamTableEventsClient interface {
	Recv() (*Events, error)
	grpc.ClientStream
}

type tableEventsServiceStreamTableEventsClient struct {
	grpc.ClientStream
}

func (x *tableEventsServiceStreamTableEventsClient) Recv() (*Events, error) {
	m := new(Events)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TableEventsServiceServer is the server API for TableEventsService service.
type TableEventsServiceServer interface {
	StreamTableEvents(*StreamTableEventsRequest, TableEventsService_StreamTableEventsServer) error
}

// UnimplementedTableEventsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTableEventsServiceServer struct {
}

func (*UnimplementedTableEventsServiceServer) StreamTableEvents(*StreamTableEventsRequest, TableEventsService_StreamTableEventsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamTableEvents not implemented")
}

func RegisterTableEventsServiceServer(s *grpc.Server, srv TableEventsServiceServer) {
	s.RegisterService(&_TableEventsService_serviceDesc, srv)
}

func _TableEventsService_StreamTableEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamTableEventsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TableEventsServiceServer).StreamTableEvents(m, &tableEventsServiceStreamTableEventsServer{stream})
}

type TableEventsService_StreamTableEventsServer interface {
	Send(*Events) error
	grpc.ServerStream
}

type tableEventsServiceStreamTableEventsServer struct {
	grpc.ServerStream
}

func (x *tableEventsServiceStreamTableEventsServer) Send(m *Events) error {
	return x.ServerStream.SendMsg(m)
}

var _TableEventsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpctableevents.TableEventsService",
	HandlerType: (*TableEventsServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamTableEvents",
			Handler:       _TableEventsService_StreamTableEvents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpctableevents/api.proto",
}
