// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: grpcbank/api.proto

package grpcbank

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type WithdrawResponse_Status int32

const (
	WithdrawResponse_UNKNOWN          WithdrawResponse_Status = 0
	WithdrawResponse_OK               WithdrawResponse_Status = 1
	WithdrawResponse_NOT_ENOUGH_CHIPS WithdrawResponse_Status = 2
)

// Enum value maps for WithdrawResponse_Status.
var (
	WithdrawResponse_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "OK",
		2: "NOT_ENOUGH_CHIPS",
	}
	WithdrawResponse_Status_value = map[string]int32{
		"UNKNOWN":          0,
		"OK":               1,
		"NOT_ENOUGH_CHIPS": 2,
	}
)

func (x WithdrawResponse_Status) Enum() *WithdrawResponse_Status {
	p := new(WithdrawResponse_Status)
	*p = x
	return p
}

func (x WithdrawResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WithdrawResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_grpcbank_api_proto_enumTypes[0].Descriptor()
}

func (WithdrawResponse_Status) Type() protoreflect.EnumType {
	return &file_grpcbank_api_proto_enumTypes[0]
}

func (x WithdrawResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WithdrawResponse_Status.Descriptor instead.
func (WithdrawResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_grpcbank_api_proto_rawDescGZIP(), []int{5, 0}
}

type WithdrawCoinsResponse_Status int32

const (
	WithdrawCoinsResponse_UNKNOWN          WithdrawCoinsResponse_Status = 0
	WithdrawCoinsResponse_OK               WithdrawCoinsResponse_Status = 1
	WithdrawCoinsResponse_NOT_ENOUGH_COINS WithdrawCoinsResponse_Status = 2
)

// Enum value maps for WithdrawCoinsResponse_Status.
var (
	WithdrawCoinsResponse_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "OK",
		2: "NOT_ENOUGH_COINS",
	}
	WithdrawCoinsResponse_Status_value = map[string]int32{
		"UNKNOWN":          0,
		"OK":               1,
		"NOT_ENOUGH_COINS": 2,
	}
)

func (x WithdrawCoinsResponse_Status) Enum() *WithdrawCoinsResponse_Status {
	p := new(WithdrawCoinsResponse_Status)
	*p = x
	return p
}

func (x WithdrawCoinsResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WithdrawCoinsResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_grpcbank_api_proto_enumTypes[1].Descriptor()
}

func (WithdrawCoinsResponse_Status) Type() protoreflect.EnumType {
	return &file_grpcbank_api_proto_enumTypes[1]
}

func (x WithdrawCoinsResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WithdrawCoinsResponse_Status.Descriptor instead.
func (WithdrawCoinsResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_grpcbank_api_proto_rawDescGZIP(), []int{7, 0}
}

type GetBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcbank_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcbank_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_grpcbank_api_proto_rawDescGZIP(), []int{0}
}

func (x *GetBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Chips  int64  `protobuf:"varint,2,opt,name=chips,proto3" json:"chips,omitempty"`
}

func (x *GetBalanceResponse) Reset() {
	*x = GetBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcbank_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResponse) ProtoMessage() {}

func (x *GetBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcbank_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return file_grpcbank_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetBalanceResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetBalanceResponse) GetChips() int64 {
	if x != nil {
		return x.Chips
	}
	return 0
}

type GetBalanceWithRankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetBalanceWithRankRequest) Reset() {
	*x = GetBalanceWithRankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcbank_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceWithRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceWithRankRequest) ProtoMessage() {}

func (x *GetBalanceWithRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcbank_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceWithRankRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceWithRankRequest) Descriptor() ([]byte, []int) {
	return file_grpcbank_api_proto_rawDescGZIP(), []int{2}
}

func (x *GetBalanceWithRankRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetBalanceWithRankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Chips  int64  `protobuf:"varint,2,opt,name=chips,proto3" json:"chips,omitempty"`
	Rank   int64  `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *GetBalanceWithRankResponse) Reset() {
	*x = GetBalanceWithRankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcbank_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceWithRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceWithRankResponse) ProtoMessage() {}

func (x *GetBalanceWithRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcbank_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceWithRankResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceWithRankResponse) Descriptor() ([]byte, []int) {
	return file_grpcbank_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetBalanceWithRankResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetBalanceWithRankResponse) GetChips() int64 {
	if x != nil {
		return x.Chips
	}
	return 0
}

func (x *GetBalanceWithRankResponse) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type WithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chips       int64  `protobuf:"varint,1,opt,name=chips,proto3" json:"chips,omitempty"`
	Reason      string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// from whom
	UserId string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *WithdrawRequest) Reset() {
	*x = WithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcbank_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawRequest) ProtoMessage() {}

func (x *WithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcbank_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawRequest.ProtoReflect.Descriptor instead.
func (*WithdrawRequest) Descriptor() ([]byte, []int) {
	return file_grpcbank_api_proto_rawDescGZIP(), []int{4}
}

func (x *WithdrawRequest) GetChips() int64 {
	if x != nil {
		return x.Chips
	}
	return 0
}

func (x *WithdrawRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *WithdrawRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WithdrawRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type WithdrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status WithdrawResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=grpcbank.WithdrawResponse_Status" json:"status,omitempty"`
}

func (x *WithdrawResponse) Reset() {
	*x = WithdrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcbank_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawResponse) ProtoMessage() {}

func (x *WithdrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcbank_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawResponse.ProtoReflect.Descriptor instead.
func (*WithdrawResponse) Descriptor() ([]byte, []int) {
	return file_grpcbank_api_proto_rawDescGZIP(), []int{5}
}

func (x *WithdrawResponse) GetStatus() WithdrawResponse_Status {
	if x != nil {
		return x.Status
	}
	return WithdrawResponse_UNKNOWN
}

type WithdrawCoinsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Coins       int64  `protobuf:"varint,2,opt,name=coins,proto3" json:"coins,omitempty"`
	Reason      string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *WithdrawCoinsRequest) Reset() {
	*x = WithdrawCoinsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcbank_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawCoinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawCoinsRequest) ProtoMessage() {}

func (x *WithdrawCoinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcbank_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawCoinsRequest.ProtoReflect.Descriptor instead.
func (*WithdrawCoinsRequest) Descriptor() ([]byte, []int) {
	return file_grpcbank_api_proto_rawDescGZIP(), []int{6}
}

func (x *WithdrawCoinsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WithdrawCoinsRequest) GetCoins() int64 {
	if x != nil {
		return x.Coins
	}
	return 0
}

func (x *WithdrawCoinsRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *WithdrawCoinsRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type WithdrawCoinsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status WithdrawCoinsResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=grpcbank.WithdrawCoinsResponse_Status" json:"status,omitempty"`
}

func (x *WithdrawCoinsResponse) Reset() {
	*x = WithdrawCoinsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcbank_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawCoinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawCoinsResponse) ProtoMessage() {}

func (x *WithdrawCoinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcbank_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawCoinsResponse.ProtoReflect.Descriptor instead.
func (*WithdrawCoinsResponse) Descriptor() ([]byte, []int) {
	return file_grpcbank_api_proto_rawDescGZIP(), []int{7}
}

func (x *WithdrawCoinsResponse) GetStatus() WithdrawCoinsResponse_Status {
	if x != nil {
		return x.Status
	}
	return WithdrawCoinsResponse_UNKNOWN
}

var File_grpcbank_api_proto protoreflect.FileDescriptor

var file_grpcbank_api_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x72, 0x70, 0x63, 0x62, 0x61, 0x6e, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x72, 0x70, 0x63, 0x62, 0x61, 0x6e, 0x6b, 0x22, 0x2c,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x68, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x68, 0x69, 0x70,
	0x73, 0x22, 0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x68, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x68, 0x69, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x79, 0x0a, 0x0f, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x68, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x68, 0x69, 0x70,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x62,
	0x61, 0x6e, 0x6b, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x33, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48,
	0x5f, 0x43, 0x48, 0x49, 0x50, 0x53, 0x10, 0x02, 0x22, 0x7f, 0x0a, 0x14, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x69,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x15, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x33, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48,
	0x5f, 0x43, 0x4f, 0x49, 0x4e, 0x53, 0x10, 0x02, 0x32, 0xd4, 0x02, 0x0a, 0x0b, 0x42, 0x61, 0x6e,
	0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x62, 0x61, 0x6e,
	0x6b, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x12, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpcbank_api_proto_rawDescOnce sync.Once
	file_grpcbank_api_proto_rawDescData = file_grpcbank_api_proto_rawDesc
)

func file_grpcbank_api_proto_rawDescGZIP() []byte {
	file_grpcbank_api_proto_rawDescOnce.Do(func() {
		file_grpcbank_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpcbank_api_proto_rawDescData)
	})
	return file_grpcbank_api_proto_rawDescData
}

var file_grpcbank_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_grpcbank_api_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_grpcbank_api_proto_goTypes = []interface{}{
	(WithdrawResponse_Status)(0),       // 0: grpcbank.WithdrawResponse.Status
	(WithdrawCoinsResponse_Status)(0),  // 1: grpcbank.WithdrawCoinsResponse.Status
	(*GetBalanceRequest)(nil),          // 2: grpcbank.GetBalanceRequest
	(*GetBalanceResponse)(nil),         // 3: grpcbank.GetBalanceResponse
	(*GetBalanceWithRankRequest)(nil),  // 4: grpcbank.GetBalanceWithRankRequest
	(*GetBalanceWithRankResponse)(nil), // 5: grpcbank.GetBalanceWithRankResponse
	(*WithdrawRequest)(nil),            // 6: grpcbank.WithdrawRequest
	(*WithdrawResponse)(nil),           // 7: grpcbank.WithdrawResponse
	(*WithdrawCoinsRequest)(nil),       // 8: grpcbank.WithdrawCoinsRequest
	(*WithdrawCoinsResponse)(nil),      // 9: grpcbank.WithdrawCoinsResponse
}
var file_grpcbank_api_proto_depIdxs = []int32{
	0, // 0: grpcbank.WithdrawResponse.status:type_name -> grpcbank.WithdrawResponse.Status
	1, // 1: grpcbank.WithdrawCoinsResponse.status:type_name -> grpcbank.WithdrawCoinsResponse.Status
	2, // 2: grpcbank.BankService.GetBalance:input_type -> grpcbank.GetBalanceRequest
	4, // 3: grpcbank.BankService.GetBalanceWithRank:input_type -> grpcbank.GetBalanceWithRankRequest
	6, // 4: grpcbank.BankService.Withdraw:input_type -> grpcbank.WithdrawRequest
	8, // 5: grpcbank.BankService.WithdrawCoins:input_type -> grpcbank.WithdrawCoinsRequest
	3, // 6: grpcbank.BankService.GetBalance:output_type -> grpcbank.GetBalanceResponse
	5, // 7: grpcbank.BankService.GetBalanceWithRank:output_type -> grpcbank.GetBalanceWithRankResponse
	7, // 8: grpcbank.BankService.Withdraw:output_type -> grpcbank.WithdrawResponse
	9, // 9: grpcbank.BankService.WithdrawCoins:output_type -> grpcbank.WithdrawCoinsResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_grpcbank_api_proto_init() }
func file_grpcbank_api_proto_init() {
	if File_grpcbank_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpcbank_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcbank_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcbank_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceWithRankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcbank_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceWithRankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcbank_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcbank_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcbank_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawCoinsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcbank_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawCoinsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpcbank_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpcbank_api_proto_goTypes,
		DependencyIndexes: file_grpcbank_api_proto_depIdxs,
		EnumInfos:         file_grpcbank_api_proto_enumTypes,
		MessageInfos:      file_grpcbank_api_proto_msgTypes,
	}.Build()
	File_grpcbank_api_proto = out.File
	file_grpcbank_api_proto_rawDesc = nil
	file_grpcbank_api_proto_goTypes = nil
	file_grpcbank_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BankServiceClient is the client API for BankService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BankServiceClient interface {
	GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error)
	GetBalanceWithRank(ctx context.Context, in *GetBalanceWithRankRequest, opts ...grpc.CallOption) (*GetBalanceWithRankResponse, error)
	Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawResponse, error)
	WithdrawCoins(ctx context.Context, in *WithdrawCoinsRequest, opts ...grpc.CallOption) (*WithdrawCoinsResponse, error)
}

type bankServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBankServiceClient(cc grpc.ClientConnInterface) BankServiceClient {
	return &bankServiceClient{cc}
}

func (c *bankServiceClient) GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error) {
	out := new(GetBalanceResponse)
	err := c.cc.Invoke(ctx, "/grpcbank.BankService/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bankServiceClient) GetBalanceWithRank(ctx context.Context, in *GetBalanceWithRankRequest, opts ...grpc.CallOption) (*GetBalanceWithRankResponse, error) {
	out := new(GetBalanceWithRankResponse)
	err := c.cc.Invoke(ctx, "/grpcbank.BankService/GetBalanceWithRank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bankServiceClient) Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawResponse, error) {
	out := new(WithdrawResponse)
	err := c.cc.Invoke(ctx, "/grpcbank.BankService/Withdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bankServiceClient) WithdrawCoins(ctx context.Context, in *WithdrawCoinsRequest, opts ...grpc.CallOption) (*WithdrawCoinsResponse, error) {
	out := new(WithdrawCoinsResponse)
	err := c.cc.Invoke(ctx, "/grpcbank.BankService/WithdrawCoins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BankServiceServer is the server API for BankService service.
type BankServiceServer interface {
	GetBalance(context.Context, *GetBalanceRequest) (*GetBalanceResponse, error)
	GetBalanceWithRank(context.Context, *GetBalanceWithRankRequest) (*GetBalanceWithRankResponse, error)
	Withdraw(context.Context, *WithdrawRequest) (*WithdrawResponse, error)
	WithdrawCoins(context.Context, *WithdrawCoinsRequest) (*WithdrawCoinsResponse, error)
}

// UnimplementedBankServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBankServiceServer struct {
}

func (*UnimplementedBankServiceServer) GetBalance(context.Context, *GetBalanceRequest) (*GetBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedBankServiceServer) GetBalanceWithRank(context.Context, *GetBalanceWithRankRequest) (*GetBalanceWithRankResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalanceWithRank not implemented")
}
func (*UnimplementedBankServiceServer) Withdraw(context.Context, *WithdrawRequest) (*WithdrawResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Withdraw not implemented")
}
func (*UnimplementedBankServiceServer) WithdrawCoins(context.Context, *WithdrawCoinsRequest) (*WithdrawCoinsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawCoins not implemented")
}

func RegisterBankServiceServer(s *grpc.Server, srv BankServiceServer) {
	s.RegisterService(&_BankService_serviceDesc, srv)
}

func _BankService_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BankServiceServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcbank.BankService/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BankServiceServer).GetBalance(ctx, req.(*GetBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BankService_GetBalanceWithRank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBalanceWithRankRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BankServiceServer).GetBalanceWithRank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcbank.BankService/GetBalanceWithRank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BankServiceServer).GetBalanceWithRank(ctx, req.(*GetBalanceWithRankRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BankService_Withdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BankServiceServer).Withdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcbank.BankService/Withdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BankServiceServer).Withdraw(ctx, req.(*WithdrawRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BankService_WithdrawCoins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawCoinsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BankServiceServer).WithdrawCoins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcbank.BankService/WithdrawCoins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BankServiceServer).WithdrawCoins(ctx, req.(*WithdrawCoinsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BankService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcbank.BankService",
	HandlerType: (*BankServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBalance",
			Handler:    _BankService_GetBalance_Handler,
		},
		{
			MethodName: "GetBalanceWithRank",
			Handler:    _BankService_GetBalanceWithRank_Handler,
		},
		{
			MethodName: "Withdraw",
			Handler:    _BankService_Withdraw_Handler,
		},
		{
			MethodName: "WithdrawCoins",
			Handler:    _BankService_WithdrawCoins_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpcbank/api.proto",
}
